# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: SpringBoot CI/CD Pipeline

on:  # executit on push or pull_request
  push:
    branches: [ "master" ]
  workflow_dispatch:
    

jobs:
  #first job
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: 11
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    - name: Building and Pushing user-service
      run: mvn package dockerfile:push --file user-service/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing department-service
      run: mvn package dockerfile:push --file department-service/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing cloud-gateway
      run: mvn package dockerfile:push --file cloud-gateway/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}


    - name: Building and Pushing cloud-config-server
      run: mvn package dockerfile:push --file cloud-config-server/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing hystrix-dashboard
      run: mvn package dockerfile:push --file hystrix-dashboard/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing user-registry
      run: mvn package dockerfile:push --file user-registry/pom.xml
      env: 
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      